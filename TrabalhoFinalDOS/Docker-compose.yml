version: '3'

services:
  db:
    image: mcr.microsoft.com/mssql/server
    environment:
      SA_PASSWORD: "GrupoESC_*"
      ACCEPT_EULA: "Y"
    ports:      
      - "1433:1433"
    networks:
      - mynetwork

  web:
    build:
      context: .
      dockerfile: Dockerfile 
    ports:      
      - "8050:80"
    depends_on:
      - db
    networks:
      - mynetwork

  portainer:
    image: portainer/portainer
    container_name: portainerTrabFinal
    ports:
      - "9000:9000"
    restart: always
    networks:
      - mynetwork
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  jenkins:
    image: jenkins/jenkins
    privileged: true
    user: root
    container_name: jenkinsTrabFinal
    ports:
      - "8080:8080"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - mynetwork
    command: sh -c "apt-get update && apt-get install wget && wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && apt update && apt upgrade -y dotnet-sdk-7.0 && java -jar /usr/share/jenkins/jenkins.war"

  sonarqube:
    image: sonarqube
    container_name: sonarqubeTrabFinal
    ports:
      - "9001:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    restart: always
    networks:
      - mynetwork

  sonarqube_db:
    image: postgres
    container_name: sonarqube_db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    restart: always
    networks:
      - mynetwork

volumes:
  portainer_data:
  jenkins_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_db:

networks:
  mynetwork:
    driver: bridge  